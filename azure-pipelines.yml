# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  testKind: 'default'

strategy:
  matrix:
    windows-stable:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
    mac-stable:
      imageName: 'macos-10.13'
      rustup_toolchain: stable
    linux-stable:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: stable
    linux-nightly:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: nightly
      testKind: 'cross-san'

pool:
  vmImage: $(imageName)

steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo build --all
    displayName: Cargo build
  - script: cargo test --all
    displayName: Cargo test
    condition: eq( variables['testKind'], 'default' )
  - ${{ if eq( variables['testKind'], 'cross-san' ) }}:
    - script: |
        pushd benchmarks/stress2 &&
        echo "lsan" &&
        cargo clean &&
        export RUSTFLAGS="-Z sanitizer=leak" &&
        cargo build --features=lock_free_delays,no_jemalloc --target x86_64-unknown-linux-gnu &&
        sudo rm -rf default.sled &&
        sudo target/x86_64-unknown-linux-gnu/debug/stress2 --duration=30 &&
        sudo target/x86_64-unknown-linux-gnu/debug/stress2 --duration=6 &&

        echo "asan" &&
        cargo clean &&
        export RUSTFLAGS="-Z sanitizer=address" &&
        export ASAN_OPTIONS="detect_odr_violation=0" &&
        cargo build --features=lock_free_delays,no_jemalloc --target x86_64-unknown-linux-gnu &&
        sudo rm -rf default.sled &&
        sudo target/x86_64-unknown-linux-gnu/debug/stress2 --duration=30 &&
        sudo target/x86_64-unknown-linux-gnu/debug/stress2 --duration=6 &&
        unset ASAN_OPTIONS &&

        echo "tsan" &&
        cargo clean &&
        export RUSTFLAGS="-Z sanitizer=thread" &&
        export TSAN_OPTIONS=suppressions=${TRAVIS_BUILD_DIR}/tsan_suppressions.txt &&
        sudo rm -rf default.sled &&
        cargo run --features=lock_free_delays,no_jemalloc --target x86_64-unknown-linux-gnu -- --duration=30 &&
        cargo run --features=lock_free_delays,no_jemalloc --target x86_64-unknown-linux-gnu -- --duration=6 &&
        unset RUSTFLAGS &&
        unset TSAN_OPTIONS &&
        popd &&

        echo "cross build" &&
        echo "https://github.com/rust-lang/cargo/issues/4753" &&
        pushd crates/sled      && cargo check --target aarch64-fuchsia && popd &&
        pushd crates/sled      && cargo check --target aarch64-linux-android && popd &&
        pushd crates/sled      && cargo check --target i686-linux-android && popd &&
        pushd crates/sled      && cargo check --target i686-unknown-linux-gnu && popd &&
        pushd crates/sled      && cargo check --target x86_64-pc-windows-gnu  && popd &&
        pushd crates/sled      && cargo check --target x86_64-linux-android  && popd &&
        pushd crates/sled      && cargo check --target x86_64-fuchsia && popd &&
        pushd crates/pagecache && cargo check --target aarch64-fuchsia && popd &&
        pushd crates/pagecache && cargo check --target aarch64-linux-android && popd &&
        pushd crates/pagecache && cargo check --target i686-linux-android && popd &&
        pushd crates/pagecache && cargo check --target i686-unknown-linux-gnu && popd &&
        pushd crates/pagecache && cargo check --target x86_64-pc-windows-gnu  && popd &&
        pushd crates/pagecache && cargo check --target x86_64-linux-android && popd &&
        pushd crates/pagecache && cargo check --target x86_64-fuchsia && popd
      displayName: cross-build and sanitizers

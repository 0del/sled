language: rust

sudo: required

cache:
  cargo: true
  directories:
    - ~/.rustup

install:
  - curl https://sh.rustup.rs -sSf |
    sh -s -- -y --default-toolchain $TRAVIS_RUST_VERSION &&
    rustup component add clippy-preview
  - if [ -n "$TARGETS" ]; then
      for TARGET in ${TARGETS[@]}; do
        rustup target add $TARGET;
      done
    fi
  - source ~/.cargo/env

matrix:
  include:
    - os: linux
      rust: nightly-2018-10-26
      env:
        - TEST=tsan
        - RUSTFLAGS="-Z sanitizer=thread"
        - TSAN_OPTIONS=suppressions=/home/travis/build/spacejam/sled/tsan_suppressions.txt
    - os: linux
      rust: nightly-2018-10-26
      env:
        - TEST=asan
        - RUSTFLAGS="-Z sanitizer=address"
    - os: linux
      rust: nightly-2018-10-26
      env:
        - TEST=lsan
        - RUSTFLAGS="-Z sanitizer=leak"
    - os: linux
      rust: nightly-2018-10-26
      env:
        - TEST=cross-build
        - TARGETS=(i686-unknown-linux-gnu x86_64-pc-windows-gnu)
    - os: osx
      rust: stable
      env:
        - TEST=osx
    - os: linux
      rust: stable
      env:
        - TEST=standard
    - os: linux
      rust: stable
      env:
        - TEST=crash
        - RUST_BACKTRACE=1
    - os: linux
      rust: stable
      env:
        - TEST=qc_log
    - os: linux
      rust: stable
      env:
        - TEST=qc_pagecache
    - os: linux
      rust: stable
      env:
        - TEST=qc_tree
    - os: linux
      rust: stable
      env:
        - TEST=clippy
        - RUSTFLAGS=-Dwarnings
  allow_failures:
    - os: linux
      rust: stable
      env:
        - TEST=clippy
        - RUSTFLAGS=-Dwarnings

script:
  - bash -c 'case "$TEST" in
               osx)
                 pushd tests &&
                 cargo check &&
                 cargo check --features=all &&
                 cargo test test_crash_recovery --release -- --ignored &&
                 cargo test tree --release
                 ;;
               qc_log)
                 pushd tests &&
                 cargo test quickcheck_log_works --release -- --ignored
                 ;;
               qc_pagecache)
                 pushd tests &&
                 cargo test quickcheck_pagecache_works --release -- --ignored
                 ;;
               qc_tree)
                 pushd tests &&
                 cargo test quickcheck_tree_matches_btreemap --release -- --ignored
                 ;;
               clippy)
                 cargo clippy
                 ;;
               asan)
                 pushd benchmarks/stress2 &&
                 cargo build --target x86_64-unknown-linux-gnu &&
                 sudo target/x86_64-unknown-linux-gnu/debug/stress2
                 ;;
               lsan)
                 pushd benchmarks/stress2 &&
                 cargo build --target x86_64-unknown-linux-gnu &&
                 sudo target/x86_64-unknown-linux-gnu/debug/stress2
                 ;;
               tsan)
                 pushd benchmarks/stress2;
                 cargo run --features=lock_free_delays --target x86_64-unknown-linux-gnu
                 ;;
               crash)
                 pushd tests &&
                 cargo test test_crash_recovery --release -- --nocapture --ignored
                 ;;
               cross-build)
                 echo "https://github.com/rust-lang/cargo/issues/4753";
                 for TARGET in ${TARGETS[@]}; do
                   echo "checking target $TARGET";
                   pushd crates/sled      && cargo check --target $TARGET --features=compress && popd &&
                   pushd crates/pagecache && cargo check --target $TARGET --features=compress && popd &&
                   pushd crates/sled      && cargo check --target $TARGET --features=nightly && popd &&
                   pushd crates/pagecache && cargo check --target $TARGET --features=nightly && popd &&
                   pushd crates/sled      && cargo check --target $TARGET --features=compress,nightly && popd &&
                   pushd crates/pagecache && cargo check --target $TARGET --features=compress,nightly && popd;
                 done
                 ;;
               standard)
                 pushd tests &&
                 cargo check &&
                 cargo check --features=all &&
                 popd &&
                 cargo test --release
                 ;;
               concurrent)
                 cargo test concurrent --release -- --ignored
                 ;;
               *)
                 echo "unknown TEST value \"$TEST\"";
                 exit 1
                 ;;
             esac'
